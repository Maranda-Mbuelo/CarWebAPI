// <auto-generated />
using System;
using CarWebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarWebAPI.Migrations
{
    [DbContext(typeof(CarApiDbContext))]
    [Migration("20230607224527_AddCarFeaturedImageColumn")]
    partial class AddCarFeaturedImageColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarWebAPI.Models.CarProperties", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarAcceleration")
                        .HasColumnType("int");

                    b.Property<int>("CarEngineSize")
                        .HasColumnType("int");

                    b.Property<string>("CarEngineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CarFeaturedImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CarFeaturedImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarFuelConsuption")
                        .HasColumnType("int");

                    b.Property<int>("CarFuelTankSize")
                        .HasColumnType("int");

                    b.Property<int>("CarHorsePower")
                        .HasColumnType("int");

                    b.Property<int>("CarKilowatts")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarNoOfGears")
                        .HasColumnType("int");

                    b.Property<int>("CarNoOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("CarPrice")
                        .HasColumnType("int");

                    b.Property<int>("CarTorque")
                        .HasColumnType("int");

                    b.Property<string>("CarTransmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarYearMake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlHandle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
